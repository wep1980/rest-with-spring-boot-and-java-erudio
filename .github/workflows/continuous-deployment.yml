name: Continuous Integration and Delivery with Github Actions

on:
  push:
    branches:
      - "master"

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Login to Google Cloud Platform
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS}}

    - name: Configure Google Cloud SDK Repository
      run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates gnupg curl
          curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor > /usr/share/keyrings/cloud.google.gpg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list > /dev/null
          sudo apt-get update

    - name: Install GKE Cloud Auth Plugin
      run: sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

    - name: Configure GKE Cloud Auth Plugin
      run: echo "export USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

    - name: Configure GKE Cluster Access
      run: gcloud container clusters get-credentials erudio-cluster-cluster --region us-central1 --project ${{ secrets.PROJECT_ID}}

    - name: Configure Docker Authentication for Google Cloud Artifact Registry
      run: gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Configure Docker Authentication for Google Cloud Artifact Registry
      run: gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Setup Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build Application .jar
      working-directory: ./
      run: mvn clean package

    - name: Docker Compose Build
      working-directory: ${{ github.workspace }}
      run: docker compose -f docker-compose.yml build

    - name: Push to Google Cloud Artifact Registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.REGISTRY_INFO }}/rest-with-spring-boot-erudio:latest
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.REGISTRY_INFO }}/rest-with-spring-boot-erudio:${{ github.run_id }}
        
        docker push ${{ secrets.REGISTRY_INFO }}/rest-with-spring-boot-erudio:latest
        docker push ${{ secrets.REGISTRY_INFO }}/rest-with-spring-boot-erudio:${{ github.run_id }}

    - name: Deploy to GKE Google Cloud
      run: |
        kubectl set image deployment/rest-with-spring-boot-erudio rest-with-spring-boot-erudio=${{ secrets.REGISTRY_INFO }}/rest-with-spring-boot-erudio:${{ github.run_id }}
        kubectl rollout status deployment rest-with-spring-boot-erudio        
  

#    - name: Deploy to Google Cloud Run
#      run: |
#        gcloud run deploy rest-with-spring-boot-erudio \
#          --image ${{ secrets.REGISTRY_INFO }}/rest-with-spring-boot-erudio:latest \
#          --region europe-west1 \
#          --platform managed \
#          --allow-unauthenticated

    

    - name: Push to Docker Hub Container Registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:${{ github.run_id }}

        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:${{ github.run_id }}
